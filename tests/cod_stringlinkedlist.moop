class Node { 
    ~ string data;
    ~ Node next;
    
    Node Node (string data) {
        this.data = data;
    }

    void setNext (string data) {
        this.next = new Node(data);
        return;
    }

    
    void setNextNode (Node node) {
        this.next = node;
        return;
    }
    
}

class LinkedList { 
    Node first;
    int size;
    
    LinkedList LinkedList () { 
        this.size = 0;
    }
    
    
    void insertElem (string elem) {
        int i;
        Node curr;
        
        if (this.size == 0) {
            this.first = new Node(elem);
        } else {
            curr = this.first;
            for (i = 0; i < this.size - 1; i = i + 1) {
                curr = curr.next;
            }
            curr.setNext(elem);
        }

        this.size = this.size + 1;
        
        return;
    }


    int getSize () {
        return this.size;
    }
    

    void printLinkedList () {  
        Node curr;
        int i;

        curr = this.first; 
        for (i = 0; i < this.size; i = i + 1) {
            print (curr.data);
            curr = curr.next;
        }

        return;
    }
    
    void deleteElem (int index) {
        Node prev;
        Node curr;
        Node temp;
        int i;


        if (index == 0) {
            temp = this.first;
            this.first = temp.next;
            this.size = this.size - 1;
            return;
        }
        
        
        prev = this.first;
        temp = this.first;
        curr = temp.next;

        
        
        for (i = 0; i < this.size; i = i + 1) { 
            
            if (i == index - 1) {
                temp = curr.next;
                prev.setNextNode(temp);
                this.size = this.size - 1;
                return;
            } else {
                prev = curr;
                curr = curr.next;
            }
        }
    
        print("Element does not exist");
        
        return;

    }

    string getElem (int index) {
        Node curr;
        int i;
        
        curr = this.first;
        for (i = 0; i < index; i = i + 1) {
            curr = curr.next;
        }
        return curr.data;
    }
    
}

class Main {
    int main () {
        LinkedList list;
        list = new LinkedList();
        list.insertElem("Leclerc    86 Best Best Driver");
        list.insertElem("Verstappen 59 Bester Driver");
        list.insertElem("Perez      54");
        list.insertElem("Russell    49");
        list.insertElem("Sainz      38");
        list.insertElem("Norris     35");
        list.insertElem("Hamilton   28");
        list.insertElem("Bottas     24");
        list.insertElem("Ocon       20");
        list.insertElem("Magnussen  15");
        list.insertElem("Ricciardo  11");
        list.insertElem("Tsunoda    10");
        list.insertElem("Gasly       6");
        list.insertElem("Vettel      4");
        list.insertElem("Alonso      2");
        list.insertElem("Zhou        1");
        list.insertElem("Stroll      1");
        list.insertElem("Albon       1");
        list.insertElem("Shumacher   0");
        list.insertElem("Latifi      0");

        print ("Current Championship Points Rankings");
        list.printLinkedList();

        print ("Remove Driver");
        list.deleteElem(19);
        list.printLinkedList(); 
        return 0;
    }
}