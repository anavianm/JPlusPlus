class Node { 
    ~ int data;
    ~ Node next;
    
    Node Node (int data) {
        this.data = data;
    }

    void setNext (int data) {
        this.next = new Node(data);
        return;
    }

    
    void setNextNode (Node node) {
        this.next = node;
        return;
    }
    
}

class LinkedList { 
    Node first;
    int size;
    
    LinkedList LinkedList () { 
        this.size = 0;
    }
    
    
    void insertElem (int elem) {
        int i;
        Node curr;
        
        if (this.size == 0) {
            this.first = new Node(elem);
        } else {
            curr = this.first;
            for (i = 0; i < this.size - 1; i = i + 1) {
                curr = curr.next;
            }
            curr.setNext(elem);
        }

        this.size = this.size + 1;
        
        return;
    }


    int getSize () {
        return this.size;
    }
    

    void printLinkedList () {  
        Node curr;
        int i;

        curr = this.first; 
        for (i = 0; i < this.size; i = i + 1) {
            printi (curr.data);
            curr = curr.next;
        }

        return;
    }
    
    void deleteElem (int index) {
        Node prev;
        Node curr;
        Node temp;
        int i;


        if (index == 0) {
            temp = this.first;
            this.first = temp.next;
            this.size = this.size - 1;
            return;
        }
        
        
        prev = this.first;
        temp = this.first;
        curr = temp.next;

        
        
        for (i = 0; i < this.size; i = i + 1) { 
            
            if (i == index - 1) {
                temp = curr.next;
                prev.setNextNode(temp);
                this.size = this.size - 1;
                return;
            } else {
                prev = curr;
                curr = curr.next;
            }
        }
    
        print("Element does not exist");
        
        return;

    }

    int getElem (int index) {
        Node curr;
        int i;
        
        curr = this.first;
        for (i = 0; i < index; i = i + 1) {
            curr = curr.next;
        }
        return curr.data;
    }
    
}

class Stack {
    LinkedList stack;
    
    Stack Stack () {
        this.stack = new LinkedList();
    }
    
    void push (int elem) {
        LinkedList temp; 
        temp = this.stack;
        temp.insertElem(elem);
        return;
    }
    
    int top () {
        int poppedElem;
        LinkedList temp;
        temp = this.stack;
        if (temp.getSize() > 0){
            poppedElem = temp.getElem(temp.getSize() - 1);
            return poppedElem;
        }
        print("Stack is empty, no element to be returned");
        return -1;
    }
    
    void pop () {
        LinkedList temp;
        temp = this.stack;
        if (temp.getSize() > 0) {
            temp.deleteElem(temp.getSize() - 1);
        }
        return;
    }

    void printStack () {
        LinkedList temp;
        temp = this.stack;
        temp.printLinkedList();
    }
}

class Main {
    int main () {
        Stack stack;
        stack = new Stack();
        stack.push(0);
        stack.push(1);
        stack.push(2);
        stack.push(3);
        stack.printStack();
        printi(stack.top());
        stack.pop();
        printi(stack.top());
        return 0;
    }
}